{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize'; // const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5,\n// };\n// not a best approach but somehow makes it to work\n// const mapCollectionIntoArrayValues = Object.values(COLLECTION_ID_MAP);\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectShopCollections], collections => collections.find(collection => collection.routeName === collectionUrlParam)));","map":{"version":3,"sources":["/home/sam/sam/projects/clothing-ecommerce/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectShopCollections","collections","selectCollection","collectionUrlParam","find","collection","routeName"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGL,cAAc,CACjD,CAACE,UAAD,CADiD,EAEhDE,IAAD,IAAUA,IAAI,CAACE,WAFkC,CAA5C;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,OAAO,CAAEO,kBAAD,IACtCR,cAAc,CAAC,CAACK,qBAAD,CAAD,EAA2BC,WAAD,IACtCA,WAAW,CAACG,IAAZ,CACGC,UAAD,IAAgBA,UAAU,CAACC,SAAX,KAAyBH,kBAD3C,CADY,CADuB,CAAhC","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\n// const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5,\n// };\n// not a best approach but somehow makes it to work\n// const mapCollectionIntoArrayValues = Object.values(COLLECTION_ID_MAP);\n\nconst selectShop = (state) => state.shop;\n\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollection = memoize((collectionUrlParam) =>\n  createSelector([selectShopCollections], (collections) =>\n    collections.find(\n      (collection) => collection.routeName === collectionUrlParam\n    )\n  )\n);\n"]},"metadata":{},"sourceType":"module"}